#!/bin/bash

# Í∞ÑÎã®Ìïú tmiDB CLI ÌÖåÏä§Ìä∏ Ïä§ÌÅ¨Î¶ΩÌä∏
# Ïô∏Î∂Ä ÏÑúÎπÑÏä§ ÏóÜÏù¥ Í∏∞Î≥∏ Í∏∞Îä•Îßå ÌÖåÏä§Ìä∏

set -e

echo "üî® Building tmiDB CLI..."
go build -o ./bin/tmidb-cli ./cmd/cli

echo "‚úÖ CLI Build complete!"
echo ""

# CLI Í≤ΩÎ°ú ÏÑ§Ï†ï
CLI="./bin/tmidb-cli"

echo "üìã Testing basic CLI functionality..."
echo "===================================="

# Í∏∞Î≥∏ Î™ÖÎ†πÏñ¥ ÌÖåÏä§Ìä∏ (Supervisor ÏóÜÏù¥)
echo ""
echo "1Ô∏è‚É£ Testing help commands..."
$CLI --help

echo ""
echo "2Ô∏è‚É£ Testing subcommand help..."
$CLI logs --help

echo ""
echo "3Ô∏è‚É£ Testing process subcommand help..."
$CLI process --help

echo ""
echo "4Ô∏è‚É£ Testing monitor subcommand help..."
$CLI monitor --help

echo ""
echo "5Ô∏è‚É£ Testing error handling (no supervisor)..."
set +e
$CLI status
EXIT_CODE=$?
set -e

if [ $EXIT_CODE -eq 1 ]; then
    echo "‚úÖ Correctly handled missing supervisor"
else
    echo "‚ùå Unexpected exit code: $EXIT_CODE"
fi

echo ""
echo "6Ô∏è‚É£ Testing invalid command..."
set +e
$CLI invalid-command 2>&1
EXIT_CODE=$?
set -e

if [ $EXIT_CODE -eq 1 ]; then
    echo "‚úÖ Correctly handled invalid command"
else
    echo "‚ùå Unexpected exit code: $EXIT_CODE"
fi

echo ""
echo "‚úÖ Basic CLI tests completed!" 